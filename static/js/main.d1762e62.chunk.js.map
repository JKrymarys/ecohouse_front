{"version":3,"sources":["env.js","homepage/currentDataForecast/curentDataForecast.js","homepage/clock.js","Logic/mlStuff.js","Logic/trainingData.js","homepage/historicalDataChart/historicalDataChart.js","homepage/homepage.js","App.js","serviceWorker.js","index.js"],"names":["lastWeatherEntry","lastHouseDataEntry","allHouseDataEntries","allWeatherEntries","CurentDataForecast","pros","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentCity","currentTemp","currentHumidity","_this2","axios","get","then","data","tempData","console","log","setState","prevState","name","main","temp","humidity","currentPressure","pressure","classes","props","react_default","a","createElement","Paper","className","infoPaper","React","Component","withStyles","theme","textAlign","margin","width","Clock","time","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","LEARNING_ITERATIONS","model","tf","configHiddenLayer","units","inputShape","activation","configOutputLayer","compileConifg","optimizer","sgd","loss","fitConfig","verbose","epochs","xs_inputs","training_ys_inputs","MLStuff","onChange","e","defineProperty","target","id","value","startML","input","parseInt","lastHomedataResult","desiredTemp","lastWeatherResult","xs_inputs_prod","predict","res","result","Math","round","lastPredictionTime","toLocaleString","startMLOnRealData","all","crossdomain","spread","weather","housedata","datetime","temp_house","pressure_house","trainModel","asyncToGenerator","regenerator_default","mark","_callee","i","response","wrap","_context","prev","next","fit","sent","finalLoss","history","stop","isModelTrained","outsiteTemp","hidden","dense","output","add","compile","_this3","_this$state","Grid","container","direction","item","xs","createResult","style","position","height","display","top","left","zIndex","background","HistoricalDataChart","tempHouseTemperatures","tempWeatherTemperatures","forEach","el","Chart","type","labels","keys","datasets","label","fill","values","backgroundColor","borderColor","options","scales","xAxes","distribution","scaleLabel","labelString","Homepage","justify","spacing","historicalDataChart","mlStuff","clock","curentDataForecast","App","root","homepage","padding","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1762e62.chunk.js","sourcesContent":["export const fiveDays3hoursApi =\n\"https://api.openweathermap.org/data/2.5/forecast?id=3093133&appid=3c786bff59e49394d1d9b34220351622&units=metric\";\nexport const currentWatherApi =\n\"https://api.openweathermap.org/data/2.5/weather?id=3093133&appid=3c786bff59e49394d1d9b34220351622&units=metric\";\n\n\nexport const lastWeatherEntry=  \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getLastWeatherEntry\"\nexport const lastHouseDataEntry=  \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getLastHouseDataEntry\"\n\nexport const allHouseDataEntries = \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getAllHouseDataEntries\"\n\nexport const allWeatherEntries = \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getAllWeatherEntries\";","import React from \"react\";\nimport axios from \"axios\";\nimport {withStyles, Paper}  from '@material-ui/core';\nimport { currentWatherApi } from \"../../env\"\n\n\nconst styles = theme => ({\n  infoPaper: {\n    textAlign: \"center\",\n    margin: 20,\n    width: \"100%\"\n  }\n})\n\nclass CurentDataForecast extends React.Component {\n  constructor(pros) {\n    super(pros);\n    this.state = { currentCity: \"-\", currentTemp: 0, currentHumidity: 0};\n  }\n\n  componentDidMount() {\n   \n\n    axios.get(currentWatherApi).then(data => {\n      let tempData = data.data;\n      console.log(\"tempData\", tempData);\n\n      this.setState(prevState => ({\n        currentCity: tempData.name,\n        currentTemp: tempData.main.temp,\n        currentHumidity: tempData.main.humidity,\n        currentPressure: tempData.main.pressure,\n      }));\n      \n      // currentWatherData = data.data;\n      // console.log(\"currentWeatherData\", tempData);\n    });\n\n  }\n\n  render() {\n    const {classes } = this.props;\n    return (\n      <Paper className={classes.infoPaper} >\n        <h4> Weather forecast for : {this.state.currentCity} </h4>\n        <h4> Current temperature : {this.state.currentTemp} </h4>\n        <h4> Current pressure  : {this.state.currentPressure} hPa </h4>\n        <h4> Humidity in {this.state.currentCity} : {this.state.currentHumidity} %</h4>\n        </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(CurentDataForecast);\n","import React from \"react\";\n\nclass Clock extends React.Component {\n    state = {\n      time: new Date()\n    };\n  \n    componentDidMount() {\n      this.timerID = setInterval(() => this.tick(), 1000);\n    }\n  \n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  \n    tick() {\n      this.setState({\n        time: new Date()\n      });\n    }\n  \n    render() {\n      return (\n        <div>\n          <h1>Have a nice day!</h1>\n          <h2>It is {this.state.time.toLocaleTimeString()}</h2>\n        </div>\n      );\n    }\n  }\n\n  export default Clock;","import * as tf from \"@tensorflow/tfjs\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { lastWeatherEntry, lastHouseDataEntry } from \"../env\";\nimport { trainingInput, trainingYs } from \"./trainingData\";\n\nconst LEARNING_RATE = 0.1;\nconst LEARNING_ITERATIONS = 100;\nconst model = tf.sequential();\nconst configHiddenLayer = {\n  units: 4,\n  inputShape: [3],\n  activation: \"sigmoid\"\n};\nconst configOutputLayer = {\n  units: 1,\n  activation: \"sigmoid\"\n};\nconst sgdOptimizer = tf.train.sgd(LEARNING_RATE);\n// const lossFunction\nconst compileConifg = {\n  optimizer: sgdOptimizer,\n  loss: \"meanSquaredError\"\n};\nconst fitConfig = {\n  verbose: true,\n  epochs: 5\n};\n\n//temp_house, temp_desired, temp_outside,\nconst xs_inputs = tf.tensor2d(trainingInput);\nconst training_ys_inputs = tf.tensor2d(trainingYs);\n\nclass MLStuff extends React.Component {\n  constructor(pros) {\n    super(pros);\n    this.state = {\n      isModelTrained: false,\n      result: null,\n      currentTemp: 0,\n      desiredTemp: 23,\n      outsiteTemp: 0,\n      finalLoss: 0,\n      lastPredictionTime: null,\n      lastWeatherResult: {},\n      lastHomedataResult: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  startML = () => {\n    let input = [\n      parseInt(this.state.lastHomedataResult.temp),\n      parseInt(this.state.desiredTemp),\n      parseInt(this.state.lastWeatherResult.temp)\n    ];\n    const xs_inputs_prod = tf.tensor2d([input]);\n\n    let output = model.predict(xs_inputs_prod);\n    output.data().then(res => {\n      console.log(\"res\", res);\n      this.setState({\n        result: Math.round(res),\n        lastPredictionTime: new Date().toLocaleString()\n      });\n    });\n  };\n\n  startMLOnRealData = () => {\n    // lastWeatherEntry, lastHouseDataEntry\n\n    function getLastWeather() {\n      return axios.get(lastWeatherEntry, { crossdomain: true });\n    }\n    function getLastHouseData() {\n      return axios.get(lastHouseDataEntry, { crossdomain: true });\n    }\n\n    axios\n      .all([getLastWeather(), getLastHouseData()])\n      .then(\n        axios.spread((weather, housedata) => {\n          this.setState({\n            lastWeatherResult: {\n              datetime: weather.data[0][0].datetime.value,\n              temp: weather.data[0][0].temp,\n              humidity: weather.data[0][0].humidity,\n              pressure: weather.data[0][0].pressure\n            },\n            lastHomedataResult: {\n              datetime: housedata.data[0][0].datetime.value,\n              temp: housedata.data[0][0].temp_house,\n              pressure: housedata.data[0][0].pressure_house\n            }\n          });\n        })\n      )\n      .then(() => {\n        this.startML();\n      });\n  };\n\n  trainModel = async function() {\n    for (let i = 0; i < LEARNING_ITERATIONS; i++) {\n      const response = await model.fit(\n        xs_inputs,\n        training_ys_inputs,\n        fitConfig\n      );\n      if (i === LEARNING_ITERATIONS - 1)\n        this.setState({\n          finalLoss: response.history.loss[0]\n        });\n    }\n  };\n\n  componentWillMount() {\n    const hidden = tf.layers.dense(configHiddenLayer);\n    const output = tf.layers.dense(configOutputLayer);\n    model.add(hidden);\n    model.add(output);\n\n    model.compile(compileConifg);\n\n    this.trainModel().then(() => {\n      console.log(\"training completed\");\n\n      this.setState({\n        isModelTrained: true\n      });\n    });\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.startMLOnRealData(), 60000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  //   console.log(\"prediction\", ys_outputs)\n  createResult(result) {\n    if (result === 1) return \"OPEN WINDOWS TO HEAT HOUSE\";\n    else if (result === 0) return \"CLOSE WINDOWS TO REDUCE COLLING OF HOUSE\";\n    else return \"-\";\n  }\n\n  render() {\n    const {\n      result,\n      finalLoss,\n      lastWeatherResult,\n      lastHomedataResult,\n      lastPredictionTime\n    } = this.state;\n\n    return (\n      <div>\n        <Grid container direction=\"column\">\n          <Grid item xs={6}>\n            <h4>Machine Learning Component</h4>\n          </Grid>\n          <Grid item xs={6}>\n            <table>\n              <tbody>\n                <th>Weather forecast at {lastWeatherResult.datetime} </th>\n                <tr>Temp: {lastWeatherResult.temp}</tr>\n                <tr>Humidity: {lastWeatherResult.humidity}</tr>\n                <tr>Pressure: {lastWeatherResult.pressure}</tr>\n                <th>House data at {lastHomedataResult.datetime} </th>\n                <tr>Temp: {lastHomedataResult.temp}</tr>\n                <tr>Pressure: {lastHomedataResult.pressure}</tr>\n                <tr>Final Loss of the Model is: {finalLoss}</tr>\n              </tbody>\n            </table>\n\n            {/* <Button\n              variant=\"contained\"\n              onClick={this.startMLOnRealData}\n              disabled={!this.state.isModelTrained}\n            >\n              Do ML!\n            </Button> */}\n          </Grid>\n\n          <Grid item xs={6}>\n            <div>\n              [{lastPredictionTime}] Result is: {this.createResult(result)}\n            </div>\n          </Grid>\n        </Grid>\n\n        <div\n          style={{\n            position: \"fixed\",\n            width: \"100%\",\n            height: \"100%\",\n            display: !this.state.isModelTrained ? \"block\" : \"none\",\n            top: 0,\n            left: 0,\n            zIndex: 1000,\n            background: \"rgba(255,255,255,0.8)\"\n          }}\n        >\n          <p\n            style={{\n              position: \"fixed\",\n              // top: \"50%\",\n              // height: \"100%\",\n              // color: \"white\",\n              display: !this.state.isModelTrained ? \"block\" : \"none\",\n              top: \"50%\",\n              left: \"50%\",\n              zIndex: 1000\n            }}\n          >\n            {\" \"}\n            System is learning now :) <br /> Please give it a moment or two.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // return <div></div>\n}\n\nexport default MLStuff;\n","\n\n\nexport const trainingInput = [\n    //inputs - ciepło otworzyc okna\n    [22, 23, 25],\n    [22, 23, 25],\n    [21, 23, 28],\n    [15, 23, 23],\n    [16, 23, 24],\n    [17, 23, 25],\n  \n    //inputs - ciepło zamknac + zaslonic okna\n    [23, 23, 28],\n    [23, 23, 28],\n    [23, 23, 28],\n    [24, 23, 31],\n    [23, 23, 25],\n    [26, 23, 28],\n  \n    // otworz okna\n    [12, 23, 17],\n    [11, 23, 25],\n    [19, 23, 28],\n    [15, 23, 22],\n    [13, 23, 19],\n    [15, 23, 28],\n  \n    // zamknij okna\n  \n    [23, 23, 19],\n    [23, 23, 15],\n    [23, 23, 18],\n    [23, 23, 11],\n    [23, 23, 10],\n    [23, 23, 8]\n  ];\n\n\n  export const trainingYs = [\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n  \n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n  \n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n  \n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0]\n  ]","import React from \"react\";\nimport axios from \"axios\";\nimport { withStyles, Paper } from \"@material-ui/core\";\nimport { allHouseDataEntries, allWeatherEntries } from \"../../env\";\nimport Chart from \"chart.js\";\n\nconst styles = theme => ({});\n\nclass HistoricalDataChart extends React.Component {\n  constructor(pros) {\n    super(pros);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const ctx = \"historicalDataChart\";\n    var tempHouseTemperatures = {};\n    var tempWeatherTemperatures = {};\n\n    function getAllHouseData() {\n      return axios.get(allHouseDataEntries);\n    }\n    function getAllWeatherData() {\n      return axios.get(allWeatherEntries);\n    }\n\n    axios\n      .all([getAllWeatherData(), getAllHouseData()])\n      .then(\n        axios.spread((weather, housedata) => {\n          weather.data[0].forEach(el => {\n            tempWeatherTemperatures[el.datetime.value] = el.temp;\n          });\n          housedata.data[0].forEach(el => {\n            tempHouseTemperatures[el.datetime.value] = el.temp_house;\n          });\n        })\n      )\n      .then(() => {\n        let myChart = new Chart(ctx, {\n          type: \"scatter\",\n          data: {\n            labels: Object.keys(tempHouseTemperatures),\n            datasets: [\n              {\n                label: \"Temp House\",\n                fill: false,\n                data: Object.values(tempHouseTemperatures),\n                backgroundColor: \"red\",\n                borderColor: \"red\"\n              },\n              {\n                label: \"Temp Weather\",\n                fill: false,\n                data: Object.values(tempWeatherTemperatures),\n                backgroundColor: \"blue\",\n                borderColor: \"blue\"\n              }\n            ]\n          },\n          options: {\n            scales: {\n              xAxes: [\n                {\n                  type: \"time\",\n                  distribution: \"linear\",\n                  time: {\n                    round: \"minute\"\n                    // unit: \"hour\",\n                    // stepSize: \"2\",\n                    // displayFormats: {\n                    //   day: \"MMM D\",\n                    //   hour: \"MMM D h:mm a\"\n                    // }\n                  },\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Date\"\n                  }\n                }\n              ]\n            }\n          }\n        });\n      });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <canvas id=\"historicalDataChart\" width=\"300\" height=\"150\" />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(HistoricalDataChart);\n","import React from \"react\";\nimport CurentDataForecast from \"./currentDataForecast/curentDataForecast\";\nimport Clock from \"./clock\";\nimport MLStuff from \"../Logic/mlStuff\";\nimport { withStyles, Grid } from \"@material-ui/core\";\nimport HistoricalDataChart from \"./historicalDataChart/historicalDataChart\";\n\nconst styles = theme => ({\n  container: {\n    // marginTop: 50,\n  }\n});\n\nclass Homepage extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid\n        container\n        className={classes.container}\n        justify=\"flex-end\"\n        spacing={5}\n      >\n        <Grid item xs={7}>\n          <HistoricalDataChart />\n          <MLStuff />\n        </Grid>\n        <Grid item xs={5}>\n          <Grid container direction=\"column\" justify=\"flex-end\" spacing={5}>\n            <Clock />\n            <CurentDataForecast />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Homepage);\n","import React from 'react';\nimport './App.css';\nimport Homepage from \"./homepage/homepage\"\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  root: {\n    padding: 24,\n  }\n})\n\nclass App extends React.Component{\n  render() {\n    const {classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n          <Homepage> </Homepage>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}