{"version":3,"sources":["env.js","logic/homepageApiWorker.js","components/currentDataForecast/CurentDataForecast.js","components/userGreet/UserGreet.js","components/MachineLearningResult/MachineLearningResult.js","logic/historicalDataWorker.js","components/historicalDataChart/HistoricalDataChart.js","logic/machineLearningLogic.js","logic/trainingData.js","components/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["currentWatherApi","allHouseDataEntries","allWeatherEntries","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","get","then","_ref","data","stop","CurentDataForecast","pros","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentCity","currentTemp","currentHumidity","_this2","_GetCurrentWeather","apply","arguments","GetCurrentWeather","result","setState","name","main","temp","humidity","currentPressure","pressure","classes","props","react_default","createElement","Paper","className","infoPaper","React","Component","withStyles","theme","textAlign","marginTop","width","UserGreet","time","Date","timerID","setInterval","tick","clearInterval","style","toLocaleTimeString","MachineLearningResult","res","Math","round","concat","_this$props","isModelTrained","predictionData","predictionResult","lastPredictionTime","finalLoss","Grid","container","direction","item","setMargin","lastWeatherResult","datetime","lastHomedataResult","createResult","position","height","display","top","left","zIndex","background","margin","getAllHouseData","getAllWeatherData","all","spread","weather","housedata","tempHouseChartData","reduce","chartData","el","value","temp_house","tempWeatherChartData","chartObject","HistoricalDataChart","createChart","Chart","type","labels","datasets","options","animation","scales","xAxes","distribution","scaleLabel","labelString","getAndSetHistoricalData","updateChartTimer","_GetHistoricalData","GetHistoricalData","label","fill","values","backgroundColor","borderColor","keys","update","console","log","id","LEARNING_ITERATIONS","model","tf","compileConifg","optimizer","sgd","loss","fitConfig","verbose","epochs","trainModel","_callee2","finalTrainingRate","i","response","_context2","fit","xs_inputs","training_ys_inputs","sent","history","predictModel","input","parseInt","xs_inputs_prod","predict","toLocaleString","hidden","dense","units","inputShape","activation","output","add","compile","startMLOnRealData","asyncToGenerator","mark","getLastWeather","getLastHouseData","pressure_house","_callee3","_context3","isTrainingComplete","Homepage","_startTrainingModel","startTrainingModel","_this$state","justify","spacing","xs","historicalDataChart_HistoricalDataChart","components_MachineLearningResult_MachineLearningResult","userGreet_UserGreet","currentDataForecast_CurentDataForecast","App","root","components_Homepage","padding","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fafa60b6.chunk.js","sourcesContent":["export const fiveDays3hoursApi =\n  \"https://api.openweathermap.org/data/2.5/forecast?id=3093133&appid=3c786bff59e49394d1d9b34220351622&units=metric\";\nexport const currentWatherApi =\n  \"https://api.openweathermap.org/data/2.5/weather?id=3093133&appid=3c786bff59e49394d1d9b34220351622&units=metric\";\n\nexport const lastWeatherEntry =\n  \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getLastWeatherEntry\";\nexport const lastHouseDataEntry =\n  \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getLastHouseDataEntry\";\n\nexport const allHouseDataEntries =\n  \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getAllHouseDataEntries\";\n\nexport const allWeatherEntries =\n  \"https://us-central1-ecohouse-9136c.cloudfunctions.net/getAllWeatherEntries\";\n","import axios from \"axios\";\nimport { currentWatherApi } from \"../env\";\n\nexport async function GetCurrentWeather() {\n  return axios.get(currentWatherApi).then(({ data }) => data);\n}\n","import React from \"react\";\nimport { withStyles, Paper } from \"@material-ui/core\";\nimport { GetCurrentWeather } from \"../../logic/homepageApiWorker\";\n\nconst styles = theme => ({\n  infoPaper: {\n    textAlign: \"center\",\n    marginTop: 20,\n    width: \"100%\"\n  }\n});\n\nclass CurentDataForecast extends React.Component {\n  constructor(pros) {\n    super(pros);\n    this.state = { currentCity: \"-\", currentTemp: 0, currentHumidity: 0 };\n  }\n\n  componentDidMount() {\n    GetCurrentWeather().then(result => {\n      this.setState({\n        currentCity: result.name,\n        currentTemp: result.main.temp,\n        currentHumidity: result.main.humidity,\n        currentPressure: result.main.pressure\n      });\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Paper className={classes.infoPaper}>\n        <h4> Weather forecast for : {this.state.currentCity} </h4>\n        <h4> Current temperature : {this.state.currentTemp} </h4>\n        <h4> Current pressure : {this.state.currentPressure} hPa </h4>\n        <h4>\n          Humidity in {this.state.currentCity} : {this.state.currentHumidity} %\n        </h4>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(CurentDataForecast);\n","import React from \"react\";\n\nclass UserGreet extends React.Component {\n  state = {\n    time: new Date()\n  };\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <h1>EcoHouse - automation system</h1>\n        <h2> {this.state.time.toLocaleTimeString()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default UserGreet;\n","import { Grid, Paper, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst styles = theme => ({\n  infoPaper: {\n    width: \"100%\"\n  },\n  setMargin: {\n    margin: 20\n  }\n});\n\nclass MachineLearningResult extends React.Component {\n  createResult(res) {\n    if (res === null) return \"-\";\n\n    const result = Math.round(res);\n    if (result === 1) return `OPEN WINDOWS TO HEAT HOUSE [${res}]`;\n    else if (result === 0)\n      return `CLOSE WINDOWS TO REDUCE COLLING OF HOUSE [${res}]`;\n  }\n\n  render() {\n    const {\n      classes,\n      isModelTrained,\n      predictionData,\n      predictionResult,\n      lastPredictionTime,\n      finalLoss\n    } = this.props;\n\n    return (\n      <Paper className={classes.infoPaper}>\n        <Grid container direction=\"column\">\n          <Grid item className={classes.setMargin}>\n            <h4>Machine Learning Component</h4>\n          </Grid>\n          <Grid item className={classes.setMargin}>\n            <table>\n              <tbody>\n                <tr>\n                  <td>Weather forecast at:</td>\n                  <td>{predictionData.lastWeatherResult.datetime}</td>\n                </tr>\n                <tr>\n                  <td>Temp:</td>\n                  <td>{predictionData.lastWeatherResult.temp}</td>\n                </tr>\n                <tr>\n                  <td>Humidity</td>\n                  <td> {predictionData.lastWeatherResult.humidity}</td>\n                </tr>\n                <tr>\n                  <td>Pressure:</td>\n                  <td>{predictionData.lastWeatherResult.pressure}</td>\n                </tr>\n                <tr>\n                  <td>House data at </td>\n                  <td>{predictionData.lastHomedataResult.datetime}</td>\n                </tr>\n                <tr>\n                  <td>Temp:</td>\n                  <td>{predictionData.lastHomedataResult.temp}</td>\n                </tr>\n                <tr>\n                  <td>Pressure:</td>\n                  <td> {predictionData.lastHomedataResult.pressure}</td>\n                </tr>\n                <tr>\n                  <td>Final Loss of the Model is: </td>\n                  <td>{finalLoss}</td>\n                </tr>\n              </tbody>\n            </table>\n          </Grid>\n\n          <Grid item className={classes.setMargin}>\n            <div>\n              [{lastPredictionTime}] Result is:\n              <b>{this.createResult(predictionResult)}</b>\n            </div>\n          </Grid>\n        </Grid>\n\n        <div\n          style={{\n            position: \"fixed\",\n            width: \"100%\",\n            height: \"100%\",\n            display: !isModelTrained ? \"block\" : \"none\",\n            top: 0,\n            left: 0,\n            zIndex: 1000,\n            background: \"rgba(255,255,255,0.8)\"\n          }}\n        >\n          <p\n            style={{\n              position: \"fixed\",\n              display: !this.props.isModelTrained ? \"block\" : \"none\",\n              top: \"50%\",\n              left: \"50%\",\n              zIndex: 1000\n            }}\n          >\n            System is learning now :) <br /> Please give it a moment or two.\n          </p>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(MachineLearningResult);\n","import axios from \"axios\";\nimport { allHouseDataEntries, allWeatherEntries } from \"../env\";\n\nexport async function GetHistoricalData() {\n  function getAllHouseData() {\n    return axios.get(allHouseDataEntries);\n  }\n  function getAllWeatherData() {\n    return axios.get(allWeatherEntries);\n  }\n\n  return axios\n    .all([getAllWeatherData(), getAllHouseData()])\n    .then(\n      axios.spread((weather, housedata) => {\n        return {\n          weather: weather.data[0],\n          housedata: housedata.data[0]\n        };\n      })\n    )\n    .then(({ weather, housedata }) => {\n      const tempHouseTemperatures = housedata.reduce((chartData, el) => {\n        chartData[el.datetime.value] = el.temp_house;\n        return chartData;\n      }, {});\n\n      const tempWeatherTemperatures = weather.reduce((chartData, el) => {\n        chartData[el.datetime.value] = el.temp;\n        return chartData;\n      }, {});\n\n      return {\n        tempHouseChartData: tempHouseTemperatures,\n        tempWeatherChartData: tempWeatherTemperatures\n      };\n    });\n}\n","import React from \"react\";\nimport { withStyles, Paper } from \"@material-ui/core\";\nimport Chart from \"chart.js\";\nimport { GetHistoricalData } from \"../../logic/historicalDataWorker\";\n\nconst styles = theme => ({\n  infoPaper: {\n    textAlign: \"center\",\n    marginTop: 20,\n    width: \"100%\"\n  }\n});\n\nlet chartObject = null;\n\nclass HistoricalDataChart extends React.Component {\n  componentDidMount() {\n    this.createChart();\n    this.getAndSetHistoricalData();\n    this.updateChartTimer();\n  }\n\n  getAndSetHistoricalData() {\n    return GetHistoricalData().then(data => {\n      const { tempHouseChartData, tempWeatherChartData } = data;\n      chartObject.data.datasets = [\n        {\n          label: \"Temp House\",\n          fill: false,\n          data: Object.values(tempHouseChartData),\n          backgroundColor: \"rgba(255, 69, 0, 0.5)\",\n          borderColor: \"rgba(255, 69, 0, 0.8)\"\n        },\n        {\n          label: \"Temp Weather\",\n          fill: false,\n          data: Object.values(tempWeatherChartData),\n          backgroundColor: \"rgba(135,206,250, 0.5)\",\n          borderColor: \"rgba(135,206,250, 0.8)\"\n        }\n      ];\n      chartObject.data.labels = Object.keys(tempHouseChartData);\n      chartObject.update();\n    });\n  }\n\n  updateChartTimer() {\n    this.timerID = setInterval(() => {\n      console.log(\"chartObject\", chartObject);\n      this.getAndSetHistoricalData();\n    }, 60000);\n  }\n  createChart = () => {\n    // const { tempHouseChartData, tempWeatherChartData } = this.state;\n    const ctx = \"historicalDataChart\";\n    chartObject = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        animation: false,\n        scales: {\n          xAxes: [\n            {\n              type: \"time\",\n              distribution: \"linear\",\n              time: {\n                round: \"minute\"\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Date\"\n              }\n            }\n          ]\n        }\n      }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Paper className={classes.infoPaper}>\n        <canvas id=\"historicalDataChart\" />\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(HistoricalDataChart);\n","import * as tf from \"@tensorflow/tfjs\";\nimport axios from \"axios\";\nimport { lastWeatherEntry, lastHouseDataEntry } from \"../env\";\nimport { trainingInput, trainingYs } from \"../logic/trainingData\";\n\nconst LEARNING_RATE = 0.1;\nconst LEARNING_ITERATIONS = 100;\nconst model = tf.sequential();\nconst configHiddenLayer = {\n  units: 4,\n  inputShape: [3],\n  activation: \"sigmoid\"\n};\nconst configOutputLayer = {\n  units: 1,\n  activation: \"sigmoid\"\n};\nconst sgdOptimizer = tf.train.sgd(LEARNING_RATE);\n// const lossFunction\nconst compileConifg = {\n  optimizer: sgdOptimizer,\n  loss: \"meanSquaredError\"\n};\nconst fitConfig = {\n  verbose: true,\n  epochs: 5\n};\n\nasync function trainModel() {\n  let finalTrainingRate;\n\n  for (let i = 0; i < LEARNING_ITERATIONS; i++) {\n    const response = await model.fit(xs_inputs, training_ys_inputs, fitConfig);\n    if (i === LEARNING_ITERATIONS - 1)\n      finalTrainingRate = response.history.loss[0];\n  }\n\n  return finalTrainingRate;\n}\n\nconst predictModel = data => {\n  let input = [\n    parseInt(data.lastHomedataResult.temp),\n    parseInt(23),\n    parseInt(data.lastWeatherResult.temp)\n  ];\n  const xs_inputs_prod = tf.tensor2d([input]);\n  let output = model.predict(xs_inputs_prod);\n\n  return output.data().then(res => {\n    return {\n      predictionData: data,\n      result: res,\n      lastPredictionTime: new Date().toLocaleString()\n    };\n  });\n};\n\n//temp_house, temp_desired, temp_outside,\nconst xs_inputs = tf.tensor2d(trainingInput);\nconst training_ys_inputs = tf.tensor2d(trainingYs);\n\nconst hidden = tf.layers.dense(configHiddenLayer);\nconst output = tf.layers.dense(configOutputLayer);\nmodel.add(hidden);\nmodel.add(output);\n\nmodel.compile(compileConifg);\n\nexport const startMLOnRealData = async () => {\n  function getLastWeather() {\n    return axios.get(lastWeatherEntry);\n  }\n  function getLastHouseData() {\n    return axios.get(lastHouseDataEntry);\n  }\n\n  return axios\n    .all([getLastWeather(), getLastHouseData()])\n    .then(\n      axios.spread((weather, housedata) => {\n        return {\n          lastWeatherResult: {\n            datetime: weather.data[0][0].datetime.value,\n            temp: weather.data[0][0].temp,\n            humidity: weather.data[0][0].humidity,\n            pressure: weather.data[0][0].pressure\n          },\n          lastHomedataResult: {\n            datetime: housedata.data[0][0].datetime.value,\n            temp: housedata.data[0][0].temp_house,\n            pressure: housedata.data[0][0].pressure_house\n          }\n        };\n      })\n    )\n    .then(data => predictModel(data));\n};\n\nexport async function startTrainingModel() {\n  return trainModel().then(finalLoss => {\n    return {\n      isTrainingComplete: true,\n      finalLoss: finalLoss\n    };\n  });\n}\n","\n\n\nexport const trainingInput = [\n    //inputs - ciepło otworzyc okna\n    [22, 23, 25],\n    [22, 23, 25],\n    [21, 23, 28],\n    [15, 23, 23],\n    [16, 23, 24],\n    [17, 23, 25],\n  \n    //inputs - ciepło zamknac + zaslonic okna\n    [23, 23, 28],\n    [23, 23, 28],\n    [23, 23, 28],\n    [24, 23, 31],\n    [23, 23, 25],\n    [26, 23, 28],\n  \n    // otworz okna\n    [12, 23, 17],\n    [11, 23, 25],\n    [19, 23, 28],\n    [15, 23, 22],\n    [13, 23, 19],\n    [15, 23, 28],\n  \n    // zamknij okna\n  \n    [23, 23, 19],\n    [23, 23, 15],\n    [23, 23, 18],\n    [23, 23, 11],\n    [23, 23, 10],\n    [23, 23, 8]\n  ];\n\n\n  export const trainingYs = [\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n  \n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n  \n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n  \n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0]\n  ]","import React from \"react\";\nimport CurentDataForecast from \"./currentDataForecast/CurentDataForecast\";\nimport UserGreet from \"./userGreet/UserGreet\";\nimport MachineLearningComponent from \"./MachineLearningResult/MachineLearningResult\";\nimport { withStyles, Grid } from \"@material-ui/core\";\nimport HistoricalDataChart from \"./historicalDataChart/HistoricalDataChart\";\n\nimport {\n  startMLOnRealData,\n  startTrainingModel\n} from \"../logic/machineLearningLogic\";\n\nconst styles = theme => ({\n  container: {\n    // marginTop: 50,\n    // height: \"100vw\"\n  }\n});\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModelTrained: false,\n      predictionResult: null,\n      predictionData: {\n        lastWeatherResult: {\n          datetime: null,\n          temp: null,\n          humidity: null,\n          pressure: null\n        },\n        lastHomedataResult: {\n          datetime: null,\n          temp: null,\n          pressure: null\n        }\n      },\n      lastPredictionTime: null,\n      finalLoss: null\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  componentDidMount() {\n    startTrainingModel()\n      .then(data => {\n        console.log(data);\n        this.setState({ isModelTrained: true, finalLoss: data.finalLoss });\n      })\n      .then(\n        (this.timerID = setInterval(\n          () =>\n            startMLOnRealData().then(data => {\n              this.setState({\n                predictionData: data.predictionData,\n                predictionResult: data.result,\n                lastPredictionTime: data.lastPredictionTime\n              });\n            }),\n          6000\n        ))\n      );\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {\n      isModelTrained,\n      predictionData,\n      predictionResult,\n      lastPredictionTime,\n      finalLoss\n    } = this.state;\n    return (\n      <Grid\n        container\n        className={classes.container}\n        justify=\"flex-end\"\n        spacing={5}\n      >\n        <Grid item xs={7} spacing={5}>\n          <HistoricalDataChart />\n          <br />\n          <MachineLearningComponent\n            isModelTrained={isModelTrained}\n            predictionData={predictionData}\n            predictionResult={predictionResult}\n            lastPredictionTime={lastPredictionTime}\n            finalLoss={finalLoss}\n          />\n        </Grid>\n        <Grid item xs={5}>\n          <Grid container direction=\"column\" justify=\"flex-end\" spacing={5}>\n            <UserGreet />\n            <CurentDataForecast />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Homepage);\n","import React from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  root: {\n    padding: 24,\n    height: \"100%\"\n  }\n});\n\nclass App extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Homepage> </Homepage>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}